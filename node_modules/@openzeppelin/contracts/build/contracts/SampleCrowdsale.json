{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"claimRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"openingTime\",\"type\":\"uint256\"},{\"name\":\"closingTime\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"goal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CrowdsaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This is an example of a fully fledged crowdsale. The way to add new features to a base crowdsale is by multiple inheritance. In this example we are providing following extensions: CappedCrowdsale - sets a max boundary for raised funds RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so when receiving purchases. * After adding multiple features it's good practice to run integration tests to ensure that subcontracts works together as intended.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cap()\":{\"return\":\"the cap of the crowdsale.\"},\"capReached()\":{\"details\":\"Checks whether the cap has been reached.\",\"return\":\"Whether the cap was reached\"},\"claimRefund(address)\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful.\",\"params\":{\"refundee\":\"Whose refund will be claimed.\"}},\"closingTime()\":{\"return\":\"the crowdsale closing time.\"},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"return\":\"true if the crowdsale is finalized, false otherwise.\"},\"goal()\":{\"return\":\"minimum amount of funds to be raised in wei.\"},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"return\":\"Whether funding goal was reached\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"return\":\"Whether crowdsale period has elapsed\"},\"isOpen()\":{\"return\":\"true if the crowdsale is open, false otherwise.\"},\"openingTime()\":{\"return\":\"the crowdsale opening time.\"},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"SampleCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/examples/SampleCrowdsale.sol\":\"SampleCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzzr://946a26eebf5d294534471d07c4dc449ce3123e9fc2994bdfcd99dff1d09cc1af\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xe612eb8a3023c1a4f4d7e2d0aaf7f19c25e9d772c46a6e95790ddb42ba7baa99\",\"urls\":[\"bzzr://3f11e0277a173ba437a448df0f1ab16a64b1b1dcd3f34019e052a7c5d14c1ea7\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0x22ad427395c439878122cbfbf13e896fd48d1fad0c6fc889a36b4f1bf4743ff4\",\"urls\":[\"bzzr://1c725bc536a34c8ae31246c7c4327a2fe7abeb7686979516c1ab65c8959f71ec\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/distribution/RefundableCrowdsale.sol\":{\"keccak256\":\"0x51ff319b8ccbbed80ef2362ab98b473b705bf39d387610baadd7b9dd0353d85e\",\"urls\":[\"bzzr://5385067c9b5f762794d9c0733f210b5b6977d8caecb0221c8c5393fb79e6dd24\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0x343249b95ade6a20737b7f681a05a257f14a39b21043ff2e31d8e5d861d83777\",\"urls\":[\"bzzr://3a53c6bbb534d2f038289952e35a75bb572f5998582b1d47827907f027dd7fb4\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x5ae16586a3b5e976aae1a08fdf109ead3840961aa0a1f5b4590d4adf5cdad3b5\",\"urls\":[\"bzzr://3128e606836af985a2c445aa5c5886c6ac6181d8edf565a2a2743fe502859ba2\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x9407dd37cfed74aa107fd1614c478ba0a2bc3e084e9aa8fbd5a6f316c53aed3b\",\"urls\":[\"bzzr://196407d49d26f709494b573b06676eaa21b0019ebebd4e610a8b1276965a8067\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/examples/SampleCrowdsale.sol\":{\"keccak256\":\"0x41864577042442cb3116691536e1582444bf58541c4f5ff084a0c48326229a04\",\"urls\":[\"bzzr://e14b609e615ec232dba959eeb15f1b4c53ef990918c0e0455c41535d9aa86793\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0x30b9cfe5aeb07c96a3346cd27dcdc2f9f19d7f664166f9b71f1e9e50605d1d67\",\"urls\":[\"bzzr://123562fe4fe4f80cf5c4f9f2e4678d9245dba57db4685ef97b395b5c9e0d5cf9\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/payment/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xc43492ecb8d0eb86ba1ecc3f50e5474021ba58ec14c004c41c6f6550e6ceafc0\",\"urls\":[\"bzzr://24eb091f7e2a1cd7583f2470432a0034f154d2ad988558b0a9672253de44fc0d\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0xdb5c39b703e6c79e801e38efebe94c8cf3683bf369cc3131cb992fedd4157134\",\"urls\":[\"bzzr://08a75f1b184cd77cbf969203978e676d771e4255e7869433b4ea74f52797f669\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/payment/escrow/RefundEscrow.sol\":{\"keccak256\":\"0x83d02d923d47755b0a1a16c6f97a31e0de8378c6bbac42e8d69f388d84749a6c\",\"urls\":[\"bzzr://c4700a8b29bf37d5d21b9287db7a766e88444b919b46cc1a45b27aadf1ed54bf\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzzr://fefcc5ec4e313a66c9fd38375983b5973c528e7e19b6d37c2f1ac6745295e6e2\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzzr://729aefb3f89f616c954a0735f8b4dd8804bdd0351e96f8e904fdb3e78a109b6c\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzzr://812521b94ef1bd30b0a93e14a97a0e79e2bf4cb607aa47c21c8177966a79fd1a\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzzr://cd04ca8d050befdf06ac93c2f6f5ea7250d2199b44aecbe54ded512e823f711a\"]},\"/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xe86fdc15fbc379ecf14d6aa4f51b87c0be8476e114e23c171b790a6717230655\",\"urls\":[\"bzzr://364c5847b4ee3ac37a6ad6e54a288889ac3d2a85757b7999c00c719db6cd871d\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160e08062002e96833981018060405260e08110156200003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050508087878588888760016000819055506000831162000106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018062002e716025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018062002e246024913960400191505060405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000811162000319576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43617070656443726f776473616c653a2063617020697320300000000000000081525060200191505060405180910390fd5b8060058190555050428210156200037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018062002dba6033913960400191505060405180910390fd5b818111620003d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603781526020018062002ded6037913960400191505060405180910390fd5b816006819055508060078190555050506000600860006101000a81548160ff0219169083151502179055506000811162000478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526566756e6461626c6543726f776473616c653a20676f616c2069732030000081525060200191505060405180910390fd5b620004886200059a60201b60201c565b6040516200049690620005c4565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015620004e9573d6000803e3d6000fd5b50600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060098190555050828111156200058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018062002e486029913960400191505060405180910390fd5b50505050505050620005d2565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611690806200172a83390190565b61114880620005e26000396000f3fe6080604052600436106100f35760003560e01c80634f9359451161008a578063b7a8807c11610059578063b7a8807c14610335578063bffa55d514610360578063ec8ac4d8146103b1578063fc0c546a146103f5576100f3565b80634f93594514610251578063521eb273146102805780637d3d6522146102d7578063b3f05b9714610306576100f3565b80634042b66f116100c65780634042b66f146101b557806347535d7b146101e05780634b6753bc1461020f5780634bb278f31461023a576100f3565b80631515bc2b146101055780632c4e722e14610134578063355274ea1461015f578063401938831461018a575b6101036100fe61044c565b610454565b005b34801561011157600080fd5b5061011a6105b8565b604051808215151515815260200191505060405180910390f35b34801561014057600080fd5b506101496105c4565b6040518082815260200191505060405180910390f35b34801561016b57600080fd5b506101746105ce565b6040518082815260200191505060405180910390f35b34801561019657600080fd5b5061019f6105d8565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b506101ca6105e2565b6040518082815260200191505060405180910390f35b3480156101ec57600080fd5b506101f56105ec565b604051808215151515815260200191505060405180910390f35b34801561021b57600080fd5b50610224610607565b6040518082815260200191505060405180910390f35b34801561024657600080fd5b5061024f610611565b005b34801561025d57600080fd5b50610266610742565b604051808215151515815260200191505060405180910390f35b34801561028c57600080fd5b50610295610756565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b506102ec610780565b604051808215151515815260200191505060405180910390f35b34801561031257600080fd5b5061031b610794565b604051808215151515815260200191505060405180910390f35b34801561034157600080fd5b5061034a6107ab565b6040518082815260200191505060405180910390f35b34801561036c57600080fd5b506103af6004803603602081101561038357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b5565b005b6103f3600480360360208110156103c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610454565b005b34801561040157600080fd5b5061040a61092c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b6001600080828254019250508190555060008054905060003490506104798382610956565b6000610484826109de565b905061049b826004546109fc90919063ffffffff16565b6004819055506104ab8482610a84565b8373ffffffffffffffffffffffffffffffffffffffff166104ca61044c565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105298483610a92565b610531610a96565b61053b8483610b59565b505060005481146105b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b6000600654421015801561060257506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff1615610677576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806110896027913960400191505060405180910390fd5b61067f6105b8565b6106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f73656481525060200191505060405180910390fd5b6001600860006101000a81548160ff021916908315150217905550610714610b5d565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b600060055461074f6105e2565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060095461078d6105e2565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b6107bd610794565b610812576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806110fb6022913960400191505060405180910390fd5b61081a610780565b15610870576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806110b06021913960400191505060405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61095e6105ec565b6109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d656443726f776473616c653a206e6f74206f70656e000000000000000081525060200191505060405180910390fd5b6109da8282610d00565b5050565b60006109f560035483610d9f90919063ffffffff16565b9050919050565b600080828401905083811015610a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610a8e8282610e25565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134610add61044c565b6040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b3e57600080fd5b505af1158015610b52573d6000803e3d6000fd5b5050505050565b5050565b610b65610780565b15610c7357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bd457600080fd5b505af1158015610be8573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c5657600080fd5b505af1158015610c6a573d6000803e3d6000fd5b50505050610cf6565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610cdd57600080fd5b505af1158015610cf1573d6000803e3d6000fd5b505050505b610cfe610f64565b565b610d0a8282610f66565b600554610d2782610d196105e2565b6109fc90919063ffffffff16565b1115610d9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43617070656443726f776473616c653a2063617020657863656564656400000081525060200191505060405180910390fd5b5050565b600080831415610db25760009050610e1f565b6000828402905082848281610dc357fe5b0414610e1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806110686021913960400191505060405180910390fd5b809150505b92915050565b610e2d61092c565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610eb357600080fd5b505af1158015610ec7573d6000803e3d6000fd5b505050506040513d6020811015610edd57600080fd5b8101908080519060200190929190505050610f60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e74656443726f776473616c653a206d696e74696e67206661696c65640081525060200191505060405180910390fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806110d1602a913960400191505060405180910390fd5b6000811415611063576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7746696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a6564526566756e6461626c6543726f776473616c653a20676f616c207265616368656443726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564a165627a7a723058206e48fb7673b9dbbafd4011dcf466f829cee8fc0d91c41f8f2993724e1ff0c3b20029608060405234801561001057600080fd5b506040516020806116908339810180604052602081101561003057600080fd5b810190808051906020019092919050505061004f61020360201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180611663602d913960400191505060405180910390fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff021916908360028111156101f857fe5b02179055505061020b565b600033905090565b6114498061021a6000396000f3fe6080604052600436106100a75760003560e01c80638c52dc41116100645780638c52dc41146102765780639af6549a1461028d578063c19d93fb146102a4578063c6dbdf61146102dd578063e3a9db1a14610334578063f340fa0114610399576100a7565b80632348238c146100ac57806338af3eed146100fd57806343d726d61461015457806351cff8d91461016b5780636809691a146101bc578063685ca1941461020d575b600080fd5b3480156100b857600080fd5b506100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103dd565b005b34801561010957600080fd5b506101126105d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016057600080fd5b50610169610600565b005b34801561017757600080fd5b506101ba6004803603602081101561018e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061077b565b005b3480156101c857600080fd5b5061020b600480360360208110156101df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e5565b005b34801561021957600080fd5b5061025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610995565b604051808215151515815260200191505060405180910390f35b34801561028257600080fd5b5061028b6109c7565b005b34801561029957600080fd5b506102a2610b43565b005b3480156102b057600080fd5b506102b9610c42565b604051808260028111156102c957fe5b60ff16815260200191505060405180910390f35b3480156102e957600080fd5b506102f2610c59565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034057600080fd5b506103836004803603602081101561035757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c82565b6040518082815260200191505060405180910390f35b6103db600480360360208110156103af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ccb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661041d610d55565b73ffffffffffffffffffffffffffffffffffffffff1614610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806113c0602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611396602a913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610640610d55565b73ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806113c0602c913960400191505060405180910390fd5b600060028111156106b957fe5b600260009054906101000a900460ff1660028111156106d457fe5b1461072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061136d6029913960400191505060405180910390fd5b60028060006101000a81548160ff0219169083600281111561074857fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b61078481610995565b6107d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061133a6033913960400191505060405180910390fd5b6107e281610d5d565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610825610d55565b73ffffffffffffffffffffffffffffffffffffffff1614610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806113c0602c913960400191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610943818373ffffffffffffffffffffffffffffffffffffffff16610f2b90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b6000600160028111156109a457fe5b600260009054906101000a900460ff1660028111156109bf57fe5b149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a07610d55565b73ffffffffffffffffffffffffffffffffffffffff1614610a73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806113c0602c913960400191505060405180910390fd5b60006002811115610a8057fe5b600260009054906101000a900460ff166002811115610a9b57fe5b14610af1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806113ec6032913960400191505060405180910390fd5b6001600260006101000a81548160ff02191690836002811115610b1057fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b600280811115610b4f57fe5b600260009054906101000a900460ff166002811115610b6a57fe5b14610bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061129d6038913960400191505060405180910390fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610c3f573d6000803e3d6000fd5b50565b6000600260009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002811115610cd857fe5b600260009054906101000a900460ff166002811115610cf357fe5b14610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061130f602b913960400191505060405180910390fd5b610d528161107c565b50565b600033905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d9d610d55565b73ffffffffffffffffffffffffffffffffffffffff1614610e09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806113c0602c913960400191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ed8573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b803073ffffffffffffffffffffffffffffffffffffffff16311015610fb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a20696e73756666696369656e742062616c616e636500000081525060200191505060405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114611018576040519150601f19603f3d011682016040523d82523d6000602084013e61101d565b606091505b5050905080611077576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806112d5603a913960400191505060405180910390fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110bc610d55565b73ffffffffffffffffffffffffffffffffffffffff1614611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806113c0602c913960400191505060405180910390fd5b600034905061117f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b600080828401905083811015611292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420616c6c6f77656420746f207769746864726177526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c65206163746976655365636f6e646172793a206e6577207072696d61727920697320746865207a65726f20616464726573735365636f6e646172793a2063616c6c6572206973206e6f7420746865207072696d617279206163636f756e74526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665a165627a7a723058202771c3afc1947ad60004cb81fc0d93ae41774540adbd5d3cbb5a45fe541db0c20029526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f206164647265737354696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d6554696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d6543726f776473616c653a20746f6b656e20697320746865207a65726f206164647265737353616d706c6543726f776453616c653a20676f616c2069732067726561746572207468616e2063617043726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80634f9359451161008a578063b7a8807c11610059578063b7a8807c14610335578063bffa55d514610360578063ec8ac4d8146103b1578063fc0c546a146103f5576100f3565b80634f93594514610251578063521eb273146102805780637d3d6522146102d7578063b3f05b9714610306576100f3565b80634042b66f116100c65780634042b66f146101b557806347535d7b146101e05780634b6753bc1461020f5780634bb278f31461023a576100f3565b80631515bc2b146101055780632c4e722e14610134578063355274ea1461015f578063401938831461018a575b6101036100fe61044c565b610454565b005b34801561011157600080fd5b5061011a6105b8565b604051808215151515815260200191505060405180910390f35b34801561014057600080fd5b506101496105c4565b6040518082815260200191505060405180910390f35b34801561016b57600080fd5b506101746105ce565b6040518082815260200191505060405180910390f35b34801561019657600080fd5b5061019f6105d8565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b506101ca6105e2565b6040518082815260200191505060405180910390f35b3480156101ec57600080fd5b506101f56105ec565b604051808215151515815260200191505060405180910390f35b34801561021b57600080fd5b50610224610607565b6040518082815260200191505060405180910390f35b34801561024657600080fd5b5061024f610611565b005b34801561025d57600080fd5b50610266610742565b604051808215151515815260200191505060405180910390f35b34801561028c57600080fd5b50610295610756565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b506102ec610780565b604051808215151515815260200191505060405180910390f35b34801561031257600080fd5b5061031b610794565b604051808215151515815260200191505060405180910390f35b34801561034157600080fd5b5061034a6107ab565b6040518082815260200191505060405180910390f35b34801561036c57600080fd5b506103af6004803603602081101561038357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b5565b005b6103f3600480360360208110156103c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610454565b005b34801561040157600080fd5b5061040a61092c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b6001600080828254019250508190555060008054905060003490506104798382610956565b6000610484826109de565b905061049b826004546109fc90919063ffffffff16565b6004819055506104ab8482610a84565b8373ffffffffffffffffffffffffffffffffffffffff166104ca61044c565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105298483610a92565b610531610a96565b61053b8483610b59565b505060005481146105b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b6000600654421015801561060257506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff1615610677576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806110896027913960400191505060405180910390fd5b61067f6105b8565b6106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f73656481525060200191505060405180910390fd5b6001600860006101000a81548160ff021916908315150217905550610714610b5d565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b600060055461074f6105e2565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060095461078d6105e2565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b6107bd610794565b610812576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806110fb6022913960400191505060405180910390fd5b61081a610780565b15610870576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806110b06021913960400191505060405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61095e6105ec565b6109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d656443726f776473616c653a206e6f74206f70656e000000000000000081525060200191505060405180910390fd5b6109da8282610d00565b5050565b60006109f560035483610d9f90919063ffffffff16565b9050919050565b600080828401905083811015610a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610a8e8282610e25565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134610add61044c565b6040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b3e57600080fd5b505af1158015610b52573d6000803e3d6000fd5b5050505050565b5050565b610b65610780565b15610c7357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bd457600080fd5b505af1158015610be8573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c5657600080fd5b505af1158015610c6a573d6000803e3d6000fd5b50505050610cf6565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610cdd57600080fd5b505af1158015610cf1573d6000803e3d6000fd5b505050505b610cfe610f64565b565b610d0a8282610f66565b600554610d2782610d196105e2565b6109fc90919063ffffffff16565b1115610d9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43617070656443726f776473616c653a2063617020657863656564656400000081525060200191505060405180910390fd5b5050565b600080831415610db25760009050610e1f565b6000828402905082848281610dc357fe5b0414610e1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806110686021913960400191505060405180910390fd5b809150505b92915050565b610e2d61092c565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610eb357600080fd5b505af1158015610ec7573d6000803e3d6000fd5b505050506040513d6020811015610edd57600080fd5b8101908080519060200190929190505050610f60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e74656443726f776473616c653a206d696e74696e67206661696c65640081525060200191505060405180910390fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806110d1602a913960400191505060405180910390fd5b6000811415611063576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7746696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a6564526566756e6461626c6543726f776473616c653a20676f616c207265616368656443726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564a165627a7a723058206e48fb7673b9dbbafd4011dcf466f829cee8fc0d91c41f8f2993724e1ff0c3b20029",
  "sourceMap": "1257:694:35:-;;;1345:604;8:9:-1;5:2;;;30:1;27;20:12;5:2;1345:604:35;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1345:604:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:4;1654:11;1667;1626:3;1581:4;1587:6;1595:5;879:1:145;863:13;:17;;;;2416:1:13;2409:4;:8;2401:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2478:1;2460:20;;:6;:20;;;;2452:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:1;2540:28;;2548:5;2540:28;;;;2532:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2628:4;2620:5;:12;;;;2652:6;2642:7;;:16;;;;;;;;;;;;;;;;;;2677:5;2668:6;;:14;;;;;;;;;;;;;;;;;;2319:370;;;488:1:21;482:3;:7;474:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;536:3;529:4;:10;;;;431:115;1064:15:24;1049:11;:30;;1041:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:11;1206;:25;1198:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:11;1302:12;:26;;;;1353:11;1338:12;:26;;;;915:456;;459:5:14;446:10;;:18;;;;;;;;;;;;;;;;;;1269:1:16;1262:4;:8;1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:8;:6;;;:8;;:::i;:::-;1325:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1325:26:16;1315:7;;:36;;;;;;;;;;;;;;;;;;1369:4;1361:5;:12;;;;1210:170;1893:3:35;1885:4;:11;;1877:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:604;;;;;;;1257:694;;3258:87:13;3297:15;3331:7;;;;;;;;;;;3324:14;;3258:87;:::o;1257:694:35:-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1257:694:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3017:23:13;3027:12;:10;:12::i;:::-;3017:9;:23::i;:::-;1257:694:35;2117:156:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:156:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3430:75:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3430:75:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;609:73:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:73:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1462:75:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1462:75:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3568:85:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3568:85:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1764:189:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:189:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1590:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1590:89:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;801:262:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:262:14;;;:::i;:::-;;800:92:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:92:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3258:87:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3258:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2046:94:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2046:94:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;561:82:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:82:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1436:89:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1436:89:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1687:236:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1687:236:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1687:236:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;3910:605:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3910:605:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;3106:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3106:76:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;788:96:0;833:15;867:10;860:17;;788:96;:::o;3910:605:13:-;1313:1:145;1296:13;;:18;;;;;;;;;;;1324:20;1347:13;;1324:36;;3988:17:13;4008:9;3988:29;;4027:44;4048:11;4061:9;4027:20;:44::i;:::-;4130:14;4147:26;4163:9;4147:15;:26::i;:::-;4130:43;;4221:25;4236:9;4221:10;;:14;;:25;;;;:::i;:::-;4208:10;:38;;;;4257:37;4274:11;4287:6;4257:16;:37::i;:::-;4339:11;4309:61;;4325:12;:10;:12::i;:::-;4309:61;;;4352:9;4363:6;4309:61;;;;;;;;;;;;;;;;;;;;;;;;4381:46;4404:11;4417:9;4381:22;:46::i;:::-;4438:15;:13;:15::i;:::-;4463:45;4485:11;4498:9;4463:21;:45::i;:::-;1370:1:145;;1405:13;;1389:12;:29;1381:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3910:605:13;;:::o;2117:156:24:-;2159:4;2254:12;;2236:15;:30;2229:37;;2117:156;:::o;3430:75:13:-;3467:7;3493:5;;3486:12;;3430:75;:::o;609:73:21:-;645:7;671:4;;664:11;;609:73;:::o;1462:75:16:-;1499:7;1525:5;;1518:12;;1462:75;:::o;3568:85:13:-;3610:7;3636:10;;3629:17;;3568:85;:::o;1764:189:24:-;1803:4;1899:12;;1880:15;:31;;:66;;;;;1934:12;;1915:15;:31;;1880:66;1873:73;;1764:189;:::o;1590:89::-;1634:7;1660:12;;1653:19;;1590:89;:::o;801:262:14:-;847:10;;;;;;;;;;;846:11;838:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:11;:9;:11::i;:::-;911:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:4;978:10;;:17;;;;;;;;;;;;;;;;;;1006:15;:13;:15::i;:::-;1036:20;;;;;;;;;;801:262::o;800:92:21:-;843:4;881;;866:11;:9;:11::i;:::-;:19;;859:26;;800:92;:::o;3258:87:13:-;3297:15;3331:7;;;;;;;;;;;3324:14;;3258:87;:::o;2046:94:16:-;2090:4;2128:5;;2113:11;:9;:11::i;:::-;:20;;2106:27;;2046:94;:::o;561:82:14:-;603:4;626:10;;;;;;;;;;;619:17;;561:82;:::o;1436:89:24:-;1480:7;1506:12;;1499:19;;1436:89;:::o;1687:236:16:-;1759:11;:9;:11::i;:::-;1751:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:13;:11;:13::i;:::-;1827:14;1819:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:7;;;;;;;;;;;:16;;;1907:8;1890:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1890:26:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1890:26:16;;;;1687:236;:::o;3106:76:13:-;3144:6;3169;;;;;;;;;;;3162:13;;3106:76;:::o;2466:165:24:-;672:8;:6;:8::i;:::-;664:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:50;2601:11;2614:9;2574:26;:50::i;:::-;2466:165;;:::o;7358:120:13:-;7425:7;7451:20;7465:5;;7451:9;:13;;:20;;;;:::i;:::-;7444:27;;7358:120;;;:::o;834:176:45:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6560:134:13:-;6647:40;6662:11;6675;6647:14;:40::i;:::-;6560:134;;:::o;6964:145::-;;;:::o;2568:97:16:-;2612:7;;;;;;;;;;;:15;;;2634:9;2645:12;:10;:12::i;:::-;2612:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2612:46:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2612:46:16;;;;;2568:97::o;5728:149:13:-;;;:::o;2234:238:16:-;2282:13;:11;:13::i;:::-;2278:156;;;2311:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2311:15:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2311:15:16;;;;2340:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2340:29:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2340:29:16;;;;2278:156;;;2400:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2400:23:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2400:23:16;;;;2278:156;2444:21;:19;:21::i;:::-;2234:238::o;1088:237:21:-;1182:50;1209:11;1222:9;1182:26;:50::i;:::-;1280:4;;1250:26;1266:9;1250:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1242:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:237;;:::o;2159:459:45:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;510:309:19:-;711:7;:5;:7::i;:::-;689:36;;;726:11;739;689:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;689:62:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;689:62:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;689:62:19;;;;;;;;;;;;;;;;668:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:309;;:::o;1272:98:14:-;:::o;5057:376:13:-;5182:1;5159:25;;:11;:25;;;;5151:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5262:1;5249:9;:14;;5241:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5057:376;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../token/ERC20/ERC20Mintable.sol\";\nimport \"../token/ERC20/ERC20Detailed.sol\";\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is ERC20Mintable, ERC20Detailed {\n    constructor () public ERC20Detailed(\"Sample Crowdsale Token\", \"SCT\", 18) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\n * when receiving purchases.\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\n    constructor (\n        uint256 openingTime,\n        uint256 closingTime,\n        uint256 rate,\n        address payable wallet,\n        uint256 cap,\n        ERC20Mintable token,\n        uint256 goal\n    )\n        public\n        Crowdsale(rate, wallet, token)\n        CappedCrowdsale(cap)\n        TimedCrowdsale(openingTime, closingTime)\n        RefundableCrowdsale(goal)\n    {\n        //As goal needs to be met for a successful crowdsale\n        //the value needs to less or equal than a cap which is limit for accepted funds\n        require(goal <= cap, \"SampleCrowdSale: goal is greater than cap\");\n    }\n}\n",
  "sourcePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/examples/SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        4542
      ],
      "SampleCrowdsaleToken": [
        4495
      ]
    },
    "id": 4543,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 4477,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 2797,
        "src": "25:53:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 4478,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 2440,
        "src": "79:59:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 4479,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 2586,
        "src": "139:51:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 4480,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 9751,
        "src": "191:42:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 4481,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 9723,
        "src": "234:42:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4482,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9750,
              "src": "453:13:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 4483,
            "nodeType": "InheritanceSpecifier",
            "src": "453:13:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4484,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9722,
              "src": "468:13:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$9722",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 4485,
            "nodeType": "InheritanceSpecifier",
            "src": "468:13:35"
          }
        ],
        "contractDependencies": [
          26,
          1408,
          9571,
          9722,
          9750,
          9921
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 4495,
        "linearizedBaseContracts": [
          4495,
          9722,
          9750,
          1408,
          9571,
          9921,
          26
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4493,
              "nodeType": "Block",
              "src": "561:64:35",
              "statements": []
            },
            "documentation": null,
            "id": 4494,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 4488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "524:24:35",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 4489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:5:35",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "557:2:35",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 4491,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4487,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "510:13:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$9722_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "510:50:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:2:35"
            },
            "returnParameters": {
              "id": 4492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:35"
            },
            "scope": 4495,
            "src": "488:137:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4543,
        "src": "420:207:35"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4496,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2796,
              "src": "1285:15:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2796",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 4497,
            "nodeType": "InheritanceSpecifier",
            "src": "1285:15:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4498,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2439,
              "src": "1302:19:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$2439",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 4499,
            "nodeType": "InheritanceSpecifier",
            "src": "1302:19:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4500,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2585,
              "src": "1323:15:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$2585",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 4501,
            "nodeType": "InheritanceSpecifier",
            "src": "1323:15:35"
          }
        ],
        "contractDependencies": [
          26,
          2119,
          2179,
          2439,
          2585,
          2796,
          3087,
          13133
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\nwhen receiving purchases.\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 4542,
        "linearizedBaseContracts": [
          4542,
          2585,
          2439,
          2179,
          3087,
          2796,
          2119,
          13133,
          26
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4540,
              "nodeType": "Block",
              "src": "1718:231:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4534,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4515,
                          "src": "1885:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4535,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4511,
                          "src": "1893:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1885:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53616d706c6543726f776453616c653a20676f616c2069732067726561746572207468616e20636170",
                        "id": 4537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:43:35",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5c6ad38480d4d604caf976e75a52d6007b5352d16ac172e53fb416aa139c7c7",
                          "typeString": "literal_string \"SampleCrowdSale: goal is greater than cap\""
                        },
                        "value": "SampleCrowdSale: goal is greater than cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5c6ad38480d4d604caf976e75a52d6007b5352d16ac172e53fb416aa139c7c7",
                          "typeString": "literal_string \"SampleCrowdSale: goal is greater than cap\""
                        }
                      ],
                      "id": 4533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13151,
                        13152
                      ],
                      "referencedDeclaration": 13152,
                      "src": "1877:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:65:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4539,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:65:35"
                }
              ]
            },
            "documentation": null,
            "id": 4541,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4518,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4507,
                    "src": "1581:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4519,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4509,
                    "src": "1587:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4520,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4513,
                    "src": "1595:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 4521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4517,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2119,
                  "src": "1571:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2119_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1571:30:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4523,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4511,
                    "src": "1626:3:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4522,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2796,
                  "src": "1610:15:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2796_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1610:20:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4526,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4503,
                    "src": "1654:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4527,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4505,
                    "src": "1667:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4528,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4525,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3087,
                  "src": "1639:14:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$3087_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1639:40:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4530,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4515,
                    "src": "1708:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4531,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4529,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2439,
                  "src": "1688:19:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$2439_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:25:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4503,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1367:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4505,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1396:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4507,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1425:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4509,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1447:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:15:35",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4511,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1479:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4513,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1500:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4512,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9750,
                    "src": "1500:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4515,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1529:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1357:190:35"
            },
            "returnParameters": {
              "id": 4532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:35"
            },
            "scope": 4542,
            "src": "1345:604:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4543,
        "src": "1257:694:35"
      }
    ],
    "src": "0:1952:35"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        4542
      ],
      "SampleCrowdsaleToken": [
        4495
      ]
    },
    "id": 4543,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 4477,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 2797,
        "src": "25:53:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 4478,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 2440,
        "src": "79:59:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 4479,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 2586,
        "src": "139:51:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 4480,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 9751,
        "src": "191:42:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/contracts/.worktree/release-v2.4.0/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 4481,
        "nodeType": "ImportDirective",
        "scope": 4543,
        "sourceUnit": 9723,
        "src": "234:42:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4482,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9750,
              "src": "453:13:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 4483,
            "nodeType": "InheritanceSpecifier",
            "src": "453:13:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4484,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9722,
              "src": "468:13:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$9722",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 4485,
            "nodeType": "InheritanceSpecifier",
            "src": "468:13:35"
          }
        ],
        "contractDependencies": [
          26,
          1408,
          9571,
          9722,
          9750,
          9921
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 4495,
        "linearizedBaseContracts": [
          4495,
          9722,
          9750,
          1408,
          9571,
          9921,
          26
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4493,
              "nodeType": "Block",
              "src": "561:64:35",
              "statements": []
            },
            "documentation": null,
            "id": 4494,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 4488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "524:24:35",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 4489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:5:35",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "557:2:35",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 4491,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4487,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "510:13:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$9722_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "510:50:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:2:35"
            },
            "returnParameters": {
              "id": 4492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:35"
            },
            "scope": 4495,
            "src": "488:137:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4543,
        "src": "420:207:35"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4496,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2796,
              "src": "1285:15:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2796",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 4497,
            "nodeType": "InheritanceSpecifier",
            "src": "1285:15:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4498,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2439,
              "src": "1302:19:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$2439",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 4499,
            "nodeType": "InheritanceSpecifier",
            "src": "1302:19:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4500,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2585,
              "src": "1323:15:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$2585",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 4501,
            "nodeType": "InheritanceSpecifier",
            "src": "1323:15:35"
          }
        ],
        "contractDependencies": [
          26,
          2119,
          2179,
          2439,
          2585,
          2796,
          3087,
          13133
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\nwhen receiving purchases.\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 4542,
        "linearizedBaseContracts": [
          4542,
          2585,
          2439,
          2179,
          3087,
          2796,
          2119,
          13133,
          26
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4540,
              "nodeType": "Block",
              "src": "1718:231:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4534,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4515,
                          "src": "1885:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4535,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4511,
                          "src": "1893:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1885:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53616d706c6543726f776453616c653a20676f616c2069732067726561746572207468616e20636170",
                        "id": 4537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:43:35",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5c6ad38480d4d604caf976e75a52d6007b5352d16ac172e53fb416aa139c7c7",
                          "typeString": "literal_string \"SampleCrowdSale: goal is greater than cap\""
                        },
                        "value": "SampleCrowdSale: goal is greater than cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5c6ad38480d4d604caf976e75a52d6007b5352d16ac172e53fb416aa139c7c7",
                          "typeString": "literal_string \"SampleCrowdSale: goal is greater than cap\""
                        }
                      ],
                      "id": 4533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13151,
                        13152
                      ],
                      "referencedDeclaration": 13152,
                      "src": "1877:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:65:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4539,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:65:35"
                }
              ]
            },
            "documentation": null,
            "id": 4541,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4518,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4507,
                    "src": "1581:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4519,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4509,
                    "src": "1587:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4520,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4513,
                    "src": "1595:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 4521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4517,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2119,
                  "src": "1571:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2119_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1571:30:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4523,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4511,
                    "src": "1626:3:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4522,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2796,
                  "src": "1610:15:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2796_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1610:20:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4526,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4503,
                    "src": "1654:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4527,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4505,
                    "src": "1667:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4528,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4525,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3087,
                  "src": "1639:14:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$3087_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1639:40:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4530,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4515,
                    "src": "1708:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4531,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4529,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2439,
                  "src": "1688:19:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$2439_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:25:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4503,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1367:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4505,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1396:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4507,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1425:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4509,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1447:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:15:35",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4511,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1479:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4513,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1500:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4512,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9750,
                    "src": "1500:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$9750",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4515,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "1529:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1357:190:35"
            },
            "returnParameters": {
              "id": 4532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:35"
            },
            "scope": 4542,
            "src": "1345:604:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4543,
        "src": "1257:694:35"
      }
    ],
    "src": "0:1952:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-29T20:45:13.192Z",
  "devdoc": {
    "details": "This is an example of a fully fledged crowdsale. The way to add new features to a base crowdsale is by multiple inheritance. In this example we are providing following extensions: CappedCrowdsale - sets a max boundary for raised funds RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so when receiving purchases. * After adding multiple features it's good practice to run integration tests to ensure that subcontracts works together as intended.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful.",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "goal()": {
        "return": "minimum amount of funds to be raised in wei."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "return": "Whether funding goal was reached"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "SampleCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}